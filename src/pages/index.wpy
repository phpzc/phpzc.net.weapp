<style>
  .weui-media-box__info__meta {
    margin: 0;
    font-size: 12px;
  }
  .topic-info {
    margin-top: 5px;
  }
  .topic-title {
    white-space: normal;
    font-size: 14px;
  }
  .avatar {
    padding: 4px;
    border: 1px solid #ddd;
    border-radius: 4px;
    width: 50px;
    height: 50px;
  }
  .reply-count {
    background-color: #d8d8d8;
    float: right;
  }
</style>

<template>
  <toast></toast>
  <view class="page__bd">
    <view class="weui-panel weui-panel_access">
      <view class="weui-panel__hd">博客列表</view>
      <view class="weui-panel__bd">
        <repeat for="{{ articles }}" key="id" index="index" item="article">
          <navigator url="/pages/show?id={{ article.id }}" class="weui-media-box weui-media-box_appmsg" hover-class="weui-cell_active">
            <view class="weui-media-box__hd weui-media-box__hd_in-appmsg">
              <image class="weui-media-box__thumb avatar" src="/images/{{ article.category_name }}.png" />
            </view>
            <view class="weui-media-box__bd weui-media-box__bd_in-appmsg">
              <view class="weui-media-box__title topic-title">{{ article.title }}</view>

              <view class="weui-media-box__info topic-info">
                <view class="weui-media-box__info__meta">{{ article.category_name }} • </view>
                <view class="weui-media-box__info__meta">{{ article.user.name }} • </view>
                <view class="weui-media-box__info__meta">{{ article.time_diff }}</view>
              </view>
            </view>
            <view class="weui-badge reply-count">{{ article.visit }}</view>
          </navigator>

        </repeat>
      </view>
    </view>


  </view>


</template>



<script>
  import wepy from 'wepy'
  import Toast from 'wepy-com-toast'
  import api from '@/utils/api'
  import util from '@/utils/util'

  export default class Index extends wepy.page {
    config = {
      enablePullDownRefresh: true
    }

    components = {
      toast: Toast
    }

    data = {
      articles: [],
      page: 1,
      noMoreData: false
    }

    async onShow() {

    }

    async getArticles(page = 1, reset = false) {
      try {
        // 请求文章列表接口
        let articleResponse = await api.request({
          url: 'articles',
          data: {
            page: page,
            include: 'user'
          }
        })

        let articles = articleResponse.data.data

      // 处理时间
        articles.forEach(function (article) {
          article.time_diff = util.diffForHumans(article.time)
        })

        this.articles = reset ? articles : this.articles.concat(articles)

        let pagination = articleResponse.data.meta.pagination

        if (pagination.current_page === pagination.total_pages) {
          this.noMoreData = true
        }

        this.$apply()
      } catch (err) {
        wepy.showModal({
          title: '提示',
          content: '服务器错误，请联系管理员'
        })
      }
    }
    async onLoad() {
      this.getArticles()
    }

    async onPullDownRefresh() {
      this.page = 1
      await this.getArticles(1, true)
      wepy.stopPullDownRefresh()
    }

    async onReachBottom() {
      if (this.noMoreData) {
        return
      }
      this.page = this.page + 1
      await this.getArticles(this.page)
      this.$apply()
    }

    onShareAppMessage (res) {
      return {
        title: 'PHP张成的博客',
        path: '/pages/index',
        imageUrl: '../images/hk.jpg',
        success: (res) => {

        },
        fail: (res) => {

        }
      }
    }
}
</script>
